-- Create Employee table
CREATE TABLE Employee (
  EmployeeID INT PRIMARY KEY,
  FirstName VARCHAR(50),
  LastName VARCHAR(50),
  Department VARCHAR(50),
  Salary DECIMAL(10, 2),
  HireDate DATE,
  ManagerID INT,
  FOREIGN KEY (ManagerID) REFERENCES Employee(EmployeeID)
);

-- Inserting data into Employee table
INSERT INTO Employee (EmployeeID, FirstName, LastName, Department, Salary, HireDate, ManagerID)
VALUES (1, 'John', 'Doe', 'Sales', 50000, '2018-01-01', NULL),
       (2, 'Jane', 'Smith', 'Marketing', 60000, '2019-02-01', 1),
       (3, 'Michael', 'Johnson', 'Finance', 70000, '2020-03-01', 1);

-- Example of using Window Functions to rank employees by salary within each department
SELECT EmployeeID, FirstName, LastName, Department, Salary,
       RANK() OVER (PARTITION BY Department ORDER BY Salary DESC) AS Rank
FROM Employee;

-- Example of using Recursive Queries to retrieve all employees and their subordinates in a hierarchical structure
WITH RECURSIVE EmployeeHierarchy AS (
  SELECT EmployeeID, FirstName, LastName, Department, ManagerID, 0 AS Level
  FROM Employee
  WHERE EmployeeID = 1 -- Root employee ID

  UNION ALL

  SELECT e.EmployeeID, e.FirstName, e.LastName, e.Department, e.ManagerID, eh.Level + 1
  FROM Employee e
  INNER JOIN EmployeeHierarchy eh ON e.ManagerID = eh.EmployeeID
)
SELECT *
FROM EmployeeHierarchy;

-- Example of using Correlated Subqueries to retrieve employees with a higher salary than their department average
SELECT EmployeeID, FirstName, LastName, Department, Salary
FROM Employee e
WHERE Salary > (SELECT AVG(Salary) FROM Employee WHERE Department = e.Department);

-- Example of using PIVOT function to transform data from rows to columns
SELECT *
FROM
(
  SELECT EmployeeID, EvaluationDate, Rating
  FROM Performance
) AS SourceTable
PIVOT
(
  AVG(Rating)
  FOR EvaluationDate IN ([2023-01-01], [2023-02-01], [2023-03-01])
) AS PivotTable;

-- Example of using Date and Time functions to calculate the tenure of an employee in years
SELECT EmployeeID, FirstName, LastName,
       DATEDIFF(YEAR, HireDate, GETDATE()) AS TenureInYears
FROM Employee;

-- Example of using Analytic Functions to calculate the total salary and average salary per department
SELECT Department, Salary, SUM(Salary) OVER (PARTITION BY Department) AS TotalSalary,
       AVG(Salary) OVER (PARTITION BY Department) AS AverageSalary
FROM Employee;
