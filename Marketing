CREATE TABLE Customers (
  CustomerID INT PRIMARY KEY,
  FirstName VARCHAR(50),
  LastName VARCHAR(50),
  Email VARCHAR(100),
  Phone VARCHAR(20),
  City VARCHAR(50)
);

INSERT INTO Customers (CustomerID, FirstName, LastName, Email, Phone, City)
VALUES
  (1, 'John', 'Doe', 'john.doe@example.com', '555-1234', 'New York'),
  (2, 'Jane', 'Smith', 'jane.smith@example.com', '555-5678', 'Los Angeles'),
  (3, 'Mike', 'Johnson', 'mike.johnson@example.com', '555-9876', 'Chicago'),
  (4, 'Emily', 'Davis', 'emily.davis@example.com', '555-4321', 'San Francisco'),
  (5, 'David', 'Brown', 'david.brown@example.com', '555-8765', 'Houston');

CREATE TABLE Products (
  ProductID INT PRIMARY KEY,
  ProductName VARCHAR(100),
  Category VARCHAR(50),
  Price DECIMAL(10, 2)
);

INSERT INTO Products (ProductID, ProductName, Category, Price)
VALUES
  (1, 'Widget A', 'Widgets', 9.99),
  (2, 'Widget B', 'Widgets', 14.99),
  (3, 'Gadget X', 'Gadgets', 19.99),
  (4, 'Gadget Y', 'Gadgets', 24.99),
  (5, 'Accessory Z', 'Accessories', 4.99);

CREATE TABLE Orders (
  OrderID INT PRIMARY KEY,
  CustomerID INT,
  ProductID INT,
  OrderDate DATE,
  Quantity INT,
  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
  FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

INSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity)
VALUES
  (1, 1, 1, '2023-05-01', 2),
  (2, 1, 3, '2023-05-05', 1),
  (3, 2, 2, '2023-05-03', 3),
  (4, 3, 5, '2023-05-10', 4),
  (5, 4, 4, '2023-05-07', 2);

CREATE TABLE Campaigns (
  CampaignID INT PRIMARY KEY,
  CampaignName VARCHAR(100),
  StartDate DATE,
  EndDate DATE,
  Budget DECIMAL(10, 2),
  Status VARCHAR(20)
);

INSERT INTO Campaigns (CampaignID, CampaignName, StartDate, EndDate, Budget, Status)
VALUES
  (1, 'Summer Sale', '2023-06-01', '2023-06-30', 10000.00, 'Active'),
  (2, 'Email Newsletter', '2023-05-15', '2023-06-15', 5000.00, 'Completed'),
  (3, 'Social Media Ads', '2023-06-01', '2023-07-31', 8000.00, 'Active'),
  (4, 'Product Launch', '2023-07-01', '2023-07-31', 15000.00, 'Scheduled'),
  (5, 'Holiday Promotion', '2023-11-15', '2023-12-31', 12000.00, 'Inactive');


CREATE TABLE CampaignPerformance (
  PerformanceID INT PRIMARY KEY,
  CampaignID INT,
  Impressions INT,
  Clicks INT,
  Conversions INT,
  Revenue DECIMAL(10, 2),
  FOREIGN KEY (CampaignID) REFERENCES Campaigns(CampaignID)
);

INSERT INTO CampaignPerformance (PerformanceID, CampaignID, Impressions, Clicks, Conversions, Revenue)
VALUES
  (1, 1, 10000, 500, 50, 2500.00),
  (2, 2, 8000, 400, 30, 1800.00),
  (3, 3, 15000, 1000, 80, 3500.00),
  (4, 4, 5000, 300, 25, 1200.00),
  (5, 5, 12000, 600, 40, 2200.00);

CREATE TABLE WebsiteVisitors (
  VisitorID INT PRIMARY KEY,
  CampaignID INT,
  VisitDate DATE,
  Source VARCHAR(50),
  DeviceType VARCHAR(50),
  PageViews INT,
  FOREIGN KEY (CampaignID) REFERENCES Campaigns(CampaignID)
);

INSERT INTO WebsiteVisitors (VisitorID, CampaignID, VisitDate, Source, DeviceType, PageViews)
VALUES
  (1, 1, '2023-06-01', 'Google', 'Desktop', 10),
  (2, 1, '2023-06-02', 'Facebook', 'Mobile', 8),
  (3, 2, '2023-05-15', 'Email', 'Desktop', 6),
  (4, 3, '2023-06-05', 'Instagram', 'Mobile', 12),
  (5, 4, '2023-07-01', 'Google', 'Desktop', 5);

--Total revenue generated by each campaign
SELECT c.CampaignName, SUM(cp.Revenue) AS TotalRevenue
FROM Campaigns c
JOIN CampaignPerformance cp ON c.CampaignID = cp.CampaignID
GROUP BY c.CampaignName;

--Top-selling products along with the total quantity sold
SELECT p.ProductName, SUM(o.Quantity) AS TotalQuantitySold
FROM Products p
JOIN Orders o ON p.ProductID = o.ProductID
GROUP BY p.ProductName
ORDER BY TotalQuantitySold DESC
LIMIT 5;

--Campaigns with the highest number of conversions
SELECT c.CampaignName, cp.Conversions
FROM Campaigns c
JOIN CampaignPerformance cp ON c.CampaignID = cp.CampaignID
ORDER BY cp.Conversions DESC
LIMIT 5;

--Average page views per device type for each campaign
SELECT c.CampaignName, w.DeviceType, AVG(w.PageViews) AS AvgPageViews
FROM Campaigns c
JOIN WebsiteVisitors w ON c.CampaignID = w.CampaignID
GROUP BY c.CampaignName, w.DeviceType;

--Customers who have placed the highest total order value
SELECT c.CustomerID, c.FirstName, c.LastName, SUM(p.Price * o.Quantity) AS TotalOrderValue
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN Products p ON o.ProductID = p.ProductID
GROUP BY c.CustomerID, c.FirstName, c.LastName
ORDER BY TotalOrderValue DESC
LIMIT 5;

